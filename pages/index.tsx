import React from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { alphabet, alphabet_table, vigenere } from "../lib/vigenere-cipher";

const last = (text: string) => {
  if (text === "") return "";

  return text.split("")[text.length - 1];
};

export default function Home() {
  const [key, setKey] = React.useState("LIMAO");
  const [text, setText] = React.useState("ATACAR BASE SUL");
  const [cipher, setCipher] = React.useState("");
  const [typePos, setTypePos] = React.useState([-1, -1]);

  React.useEffect(() => {
    const [result, keyText] = vigenere(text, key);

    const y = alphabet.indexOf(last(keyText));
    const x = alphabet.indexOf(last(text));

    setTypePos([y, x]);
    setCipher(result);
  }, [text, key]);

  function isSelected(x: number, y: number) {
    if (typePos[0] === y && typePos[1] === x) return styles.selected;
    return;
  }

  function isCurrentCol(x: number) {
    if (typePos[1] === x) return styles.colAndRowSelected;
  }

  function isCurrentRow(y: number) {
    if (typePos[0] === y) return styles.colAndRowSelected;
  }

  function getClassNames(x: number, y: number) {
    return [isCurrentCol(x), isCurrentRow(y), isSelected(x, y)].join(" ");
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Cifra de Vigenère</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Cifra de Vigenère</h1>
      <main className={styles.main}>
        <div className={styles.left}>
          <div className={styles.table}>
            <span className={`${styles.x_line} ${styles.y_line}`}></span>
            {alphabet.split("").map((l, i) => (
              <span
                className={`${styles.x_line} ${isCurrentRow(i)}`}
                key={"x" + i}
              >
                {l}
              </span>
            ))}
            {alphabet_table.map((x, i) => {
              return [
                <span
                  className={`${styles.y_line} ${isCurrentCol(i)}`}
                  key={"y" + i}
                >
                  {alphabet.charAt(i)}
                </span>,
                ...x.map((y, j) => (
                  <span key={`${i}_${j}`} className={getClassNames(i, j)}>
                    {y}
                  </span>
                )),
              ];
            })}
          </div>
        </div>
        <div className={styles.right}>
          <div>
            Texto:
            <input
              value={text}
              onChange={(e) => setText(e.target.value.toUpperCase())}
            />
            Chave:
            <input
              value={key}
              onChange={(e) => setKey(e.target.value.toUpperCase())}
            />
          </div>
          <div>
            Texto:
            <h3>{text.replace(/ /g, "")}</h3>
            Cifra:
            <h1>{cipher}</h1>
          </div>
        </div>
      </main>
    </div>
  );
}
